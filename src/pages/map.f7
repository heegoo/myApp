<template>
  <div class="page" data-name="map">
    <div class="navbar">
      <div class="navbar-bg"></div>
      <div class="navbar-inner sliding">
        <div class="title">Map</div>
      </div>
    </div>
    <div class="page-content">
      <div class="map_wrap">
        <!-- 지도를 표시할 div 입니다 -->
        <div id="map" style="width:100%;height:100%;position:relative;overflow:hidden;"></div>
        <div id="menu_wrap" class="bg_white list">
          <form id="search-form" >
          <ul>
            <li class="item-content item-input item-input-outline">
                <div class="item-inner">
                <div class="item-title item-floating-label">키워드:</div>
                <div class="item-input-wrap block block-strong-ios block-outline-ios ">
                  <div class="grid grid-cols-3">
                    <input type="text" id="keyword" name="keyword" size="15" ></input>
                    <a class="button button-outline button-small convert-form-to-data" href="#">검색하기</a>
                    <a class="button button-outline button-small move-to-current" href="#">현위치</a>
                  </div>
                </div>
              </div>
            </li>
          </ul>
          </form>
          <ul id="placesList"  ></ul>
          <div id="pagination" ></div>
        </div>
      </div>
    </div>
  </div>
</template>
<style>
  .map_wrap, .map_wrap * {margin:0;padding:0;font-family:'Malgun Gothic',dotum,'돋움',sans-serif;font-size:12px;}
  .map_wrap a, .map_wrap a:hover, .map_wrap a:active{color:#000;text-decoration: none;}
  .map_wrap {position:relative;width:100%;height:500px;}
  #menu_wrap {position:absolute;top:0;left:0;bottom:0;width:400px;float:left;margin:10px 0 30px 10px;padding:5px;overflow:auto;background:rgba(255, 255, 255, 0.7);z-index: 1;font-size:12px;border-radius: 10px;}
  .bg_white {background:#fff;}
  #search-form {--f7-button-height:18px;}
  #placesList li {list-style: none;}
  #placesList .item {position:relative;border-bottom:1px solid #888;overflow: hidden;cursor: pointer;min-height: 65px;}
  #placesList .item span {display: block;margin-top:4px;}
  #placesList .item h5, #placesList .item .info {text-overflow: ellipsis;overflow: hidden;white-space: nowrap;}
  #placesList .item .info{padding:10px 0 10px 55px;}
  #placesList .info .gray {color:#8a8a8a;}
  #placesList .info .jibun {padding-left:26px;background:url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_jibun.png) no-repeat;}
  #placesList .info .tel {color:#009900;}
  #placesList .item .markerbg {float:left;position:absolute;width:36px; height:37px;margin:10px 0 0 10px;background:url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png) no-repeat;}
  #placesList .item .marker_1 {background-position: 0 -10px;}
  #placesList .item .marker_2 {background-position: 0 -56px;}
  #placesList .item .marker_3 {background-position: 0 -102px}
  #placesList .item .marker_4 {background-position: 0 -148px;}
  #placesList .item .marker_5 {background-position: 0 -194px;}
  #placesList .item .marker_6 {background-position: 0 -240px;}
  #placesList .item .marker_7 {background-position: 0 -286px;}
  #placesList .item .marker_8 {background-position: 0 -332px;}
  #placesList .item .marker_9 {background-position: 0 -378px;}
  #placesList .item .marker_10 {background-position: 0 -423px;}
  #placesList .item .marker_11 {background-position: 0 -470px;}
  #placesList .item .marker_12 {background-position: 0 -516px;}
  #placesList .item .marker_13 {background-position: 0 -562px;}
  #placesList .item .marker_14 {background-position: 0 -608px;}
  #placesList .item .marker_15 {background-position: 0 -654px;}
  #pagination {margin:10px auto;text-align: center;}
  #pagination a {display:inline-block;margin-right:10px;}
  #pagination .on {font-weight: bold; cursor: default;color:#777;}
</style>  
<script>
import myMap from '../js/myMap.js';
  export default (props, { $, $7, $store, $on }) => {
    const {kakao} = window;
    const products = $store.getters.products;

    var startPos = window.currentGeoLoc;  //.startPos;
    var mapOption;

    $on('pageInit', (e, page) => {
        console.log('pageInit', page);
        $('.convert-form-to-data').on('click', function () {
          var formData = $f7.form.convertToData('#search-form');
          console.log(JSON.stringify(formData));
          searchPlaces(formData.keyword);
        });

        $('.move-to-current').on('click', function () {
          searchPlacesByPosition(startPos.coords.latitude, startPos.coords.longitude);
        });

        if( kakao && kakao.maps ) {
            // kakao.maps.load(() => {
        
            console.log('loadMap - ' , startPos)
            var mapContainer = document.getElementById('map'); // 지도를 표시할 div 
            mapOption = { 
                center: new kakao.maps.LatLng(startPos.coords.latitude, startPos.coords.longitude), // 지도의 중심좌표
                level: 3 // 지도의 확대 레벨
            };

            myMap.CreateMap(kakao, mapContainer, mapOption, searchPlacesByPosition);
            // // // 지도를 표시할 div와  지도 옵션으로  지도를 생성합니g다
            // myMap.map = new kakao.maps.Map(mapContainer, mapOption); 
            // // // 장소 검색 객체를 생성합니다
            // ps = new kakao.maps.services.Places(); 
            // myMap.infowindow = new kakao.maps.InfoWindow({zIndex:1});
            
            // 키워드로 장소를 검색합니다
            searchPlaces("약국");
            //     // } else {
            //     //     loadScript();
            // })
        }
    });

    // 키워드 검색을 요청하는 함수입니다
    function searchPlaces(keyword) {
        console.log('searchPlaces!');
  
        // var keyword = $('#keyword').val();
        // // var keyword = document.getElementById('keyword').value;
        // console.log('키워드를 입력!', keyword);
  
        if (!keyword.replace(/^\s+|\s+$/g, '')) {
            // console.log('키워드를 입력해주세요!');
            // return; // false;
            keyword = '약국';
        }
  
        // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다
        myMap.ps.keywordSearch( keyword, placesSearchCB, {category_group_code:'PM9',}); 
      }
  
    function searchPlacesByPosition(x, y, code='PM9') {
          x = Number(x);
          y = Number(y);
          // 마커를 생성하고 지도에 표시합니다
          var placePosition = new kakao.maps.LatLng(x, y),
          bounds = new kakao.maps.LatLngBounds();
  
          // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해
          // LatLngBounds 객체에 좌표를 추가합니다
          // bounds.extend(placePosition);
          // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다
          // myMap.map.setBounds(bounds);
  
          // searchPlaces();
          console.log('searchPlacesByPosition!', x, y);
          mapOption = { 
                center: placePosition, // 지도의 중심좌표
                level: 4 // 지도의 확대 레벨
            };

          myMap.ChangeMap(mapOption, searchPlacesByPosition);
 
          var keyword = $('#keyword').val();
          // var keyword = document.getElementById('keyword').value;
          console.log('키워드를 입력!', keyword, mapOption);
  
          if (!keyword.replace(/^\s+|\s+$/g, '')) {
              // console.log('키워드를 입력해주세요!');
              // return; // false;
              keyword = '약국';
          }
          keyword = '약국';
          // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다
          console.log({x:x, y:y, bounds:bounds,})
          myMap.ps.setMap(myMap.map);
          myMap.ps.keywordSearch( keyword, placesSearchCB, {location:placePosition, category_group_code:'PM9',}); 
          // myMap.ps.keywordSearch( keyword, placesSearchCB, {x:x, y:y, bounds:bounds, category_group_code:'PM9',}); 
      }
  
    // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다
    function placesSearchCB(data, status, pagination) {
        console.log('검색 결과!', data);
        if (status === kakao.maps.services.Status.OK) {

            // 정상적으로 검색이 완료됐으면
            // 검색 목록과 마커를 표출합니다
            myMap.displayPlaces(data);

            // 페이지 번호를 표출합니다
            myMap.displayPagination(pagination);

        } else if (status === kakao.maps.services.Status.ZERO_RESULT) {

            alert('검색 결과가 존재하지 않습니다.');
            return;

        } else if (status === kakao.maps.services.Status.ERROR) {

            alert('검색 결과 중 오류가 발생했습니다.');
            return;

        } else if (status === null) {

            alert('Bad Request 발생했습니다.');
            return;

        }
    }

    // const addProduct = () => {
    //   $store.dispatch('addProduct', {
    //     id: '4',
    //     title: 'Apple iPhone 12',
    //     description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nisi tempora similique reiciendis, error nesciunt vero, blanditiis pariatur dolor, minima sed sapiente rerum, dolorem corrupti hic modi praesentium unde saepe perspiciatis.'
    //   });
    // }

    return $render;
  }

</script>
